#!/usr/bin/env ruby
require_relative '../lib/sanity_checker'
require_relative '../lib/runner'

# Convert a mobi file to an epub file
class Main
  def initialize(*args)
    SanityChecker.dependency('ebook-convert')
    SanityChecker.dependency('ebook-metadata-update')
    @inputs = SanityChecker.extension('mobi', args)
  end

  def run
    @inputs.each do |input|
      dirname = File.dirname(input)
      extname = File.extname(input)
      basename = File.basename(input, extname)
      output = File.join(dirname, "#{basename}.epub")
      cover = File.join(dirname, "#{basename}.jpg")

      options = [
        input.shellescape,
        output.shellescape
      ]

      if File.exist?(cover)
        options << "--cover #{cover.shellescape}"
        options << '--preserve-cover-aspect-ratio'
      else
        puts '⚠ Unable to find cover file'.yellow
      end

      puts "> Converting #{basename} to .epub"
      Runner.run('ebook-convert', options)
      puts '> Updating metadata'
      Runner.run('ebook-metadata-update', [output.shellescape])
      puts "✔ #{basename} converted".green
    end
  end
end
Main.new(*ARGV).run
